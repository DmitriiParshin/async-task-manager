services:
  web:
    build: .
    container_name: web
    command: >
      bash -c "
      poetry run python manage.py makemigrations &&
      poetry run python manage.py migrate &&
      poetry run python manage.py collectstatic --noinput &&
      poetry run python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    working_dir: /app
    ports:
      - "8000:8000"
    depends_on:
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=django-db

  black:
    build: .
    container_name: black
    volumes:
      - .:/app
    working_dir: /app
    command: poetry run black .

  pytest:
    build: .
    container_name: pytest
    volumes:
      - .:/app
    working_dir: /app
    command: poetry run pytest

  db:
    image: postgres:17.0-alpine
    container_name: db
    environment:
      POSTGRES_DB: django
      POSTGRES_USER: django
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"

  redis:
    image: redis:7.4.0-alpine
    container_name: redis
    ports:
      - "6379:6379"

  celery:
    build: .
    container_name: celery
    command: poetry run celery -A config worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=django-db